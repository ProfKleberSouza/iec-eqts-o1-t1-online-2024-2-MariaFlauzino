{
	"info": {
		"_postman_id": "1e8a4a03-e63e-4019-aed1-bff5f4c46687",
		"name": "Testes de Integração",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5081653"
	},
	"item": [
		{
			"name": "Fluxo Compra com Sucesso",
			"item": [
				{
					"name": "Verificar quantidade produto antes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const resposta = pm.response.json();\r",
									"pm.collectionVariables.set(\"qtdProduto\", resposta.quantidade);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/produtos/:idProduto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos",
								":idProduto"
							],
							"variable": [
								{
									"key": "idProduto",
									"value": "{{idProduto}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Adicionar um produto ao carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"const resposta = pm.response.json();\r",
									"pm.collectionVariables.set(\"idCarrinho\", resposta._id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\");\r",
									"const token = pm.collectionVariables.get(\"token\");\r",
									"\r",
									"\r",
									"// Usuario Login\r",
									"let user = {\r",
									"   email: \"mariaflauzino@pucminas.br\",\r",
									"   password: \"pucminas\"\r",
									"};\r",
									"\r",
									"\r",
									"// Login request\r",
									"let loginOptions = {\r",
									"    url: `${baseUrl}/login`,\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify(user)\r",
									"    }\r",
									"};\r",
									"\r",
									"//Excluir carrinho\r",
									"let excluirCarrinhoOptions = {\r",
									"    url: `${baseUrl}/carrinhos/cancelar-compra`,\r",
									"    method: 'DELETE',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"        'Authorization': `${token}`\r",
									"    }\r",
									"};\r",
									"\r",
									"login();\r",
									"\r",
									"function login()\r",
									"{\r",
									"    pm.sendRequest(loginOptions, function (err, res) {\r",
									"        if (err) {\r",
									"            console.error('Erro ao realizar login:', err);\r",
									"            \r",
									"        } else {\r",
									"            console.log('Login com sucesso', res.status, res.json());\r",
									"\r",
									"            let responseData = res.json();\r",
									"            pm.collectionVariables.set(\"token\", responseData.authorization);\r",
									"            setTimeout(function(){}, 2000);\r",
									"            excluirCarrinho();\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"function excluirCarrinho()\r",
									"{\r",
									"    //pm.request.headers.add({ key: 'Authorization', value: `Bearer ${token}` });\r",
									"    pm.sendRequest(excluirCarrinhoOptions, function (err, res) {\r",
									"        if (err) {\r",
									"            console.error('Erro ao excluir carrinho:', err);\r",
									"        } else {\r",
									"            // Log response status and body\r",
									"            console.log('Carrinho excluído com sucesso:', res.status, res.json());\r",
									"            setTimeout(function(){}, 5000);\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 2\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carrinhos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validar Produto foi adicionado ao Carrinho",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\");\r",
									"const token = pm.collectionVariables.get(\"token\");\r",
									"\r",
									"// Usuario Login\r",
									"let user = {\r",
									"   email: \"mariaflauzino@pucminas.br\",\r",
									"   password: \"pucminas\"\r",
									"};\r",
									"\r",
									"// Login request\r",
									"let loginOptions = {\r",
									"    url: `${baseUrl}/login`,\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify(user)\r",
									"    }\r",
									"};\r",
									"\r",
									"login();\r",
									"\r",
									"function login()\r",
									"{\r",
									"    pm.sendRequest(loginOptions, function (err, res) {\r",
									"        if (err) {\r",
									"            console.error('Erro ao realizar login:', err);\r",
									"            \r",
									"        } else {\r",
									"            console.log('Login com sucesso', res.status, res.json());\r",
									"\r",
									"            let responseData = res.json();\r",
									"            pm.collectionVariables.set(\"token\", responseData.authorization);\r",
									"        }\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validação da estrutura de resposta - Buscar Carrinho por ID - Carrinho encontrado\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var produtos = jsonData.produtos;\r",
									"\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(produtos).to.be.an('array').that.has.lengthOf(1);\r",
									"    pm.expect(jsonData).to.have.property('precoTotal');\r",
									"    pm.expect(jsonData).to.have.property('quantidadeTotal');\r",
									"    pm.expect(jsonData).to.have.property('idUsuario');\r",
									"    pm.expect(jsonData).to.have.property('_id');\r",
									"    produtos.forEach(function (produto){\r",
									"         pm.expect(produto).to.have.property('idProduto');\r",
									"         pm.expect(produto).to.have.property('quantidade');\r",
									"         pm.expect(produto).to.have.property('precoUnitario');\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validação resposta carrinho\", function () {\r",
									"    var expectedResponse = {\r",
									"        idProduto: pm.collectionVariables.get(\"idProduto\"),\r",
									"        quantidade: 2,\r",
									"        precoUnitario: 5240\r",
									"    };\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.produtos[0]).to.contains(expectedResponse);\r",
									"});\r",
									"\r",
									"pm.test(\"Validação valor total carrinho\", function () {\r",
									"    var expectedResponse = {\r",
									"        idProduto: pm.collectionVariables.get(\"idProduto\"),\r",
									"        quantidade: 2,\r",
									"        precoUnitario: 5240\r",
									"    };\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var produto = jsonData.produtos[0];\r",
									"    pm.expect(jsonData.precoTotal).to.eql(produto.quantidade * produto.precoUnitario);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 8\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carrinhos/:idCarrinho",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								":idCarrinho"
							],
							"variable": [
								{
									"key": "idCarrinho",
									"value": "{{idCarrinho}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Concluir compra",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validação da estrutura de resposta - Registro excluído com sucesso\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/concluir-compra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								"concluir-compra"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verificar quantidade produto depois",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifica a quantidade de produtos após finalizar a compra\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.quantidade).to.eql(Number(pm.collectionVariables.get(\"qtdProduto\")) - 2);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/produtos/:idProduto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos",
								":idProduto"
							],
							"variable": [
								{
									"key": "idProduto",
									"value": "{{idProduto}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Produto encontrado",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos",
										":_id"
									],
									"variable": [
										{
											"key": "_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\",\n  \"_id\": \"<string>\"\n}"
						},
						{
							"name": "Produto não encontrado",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos",
										":_id"
									],
									"variable": [
										{
											"key": "_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Fluxo Compra Cancelada",
			"item": [
				{
					"name": "Verificar quantidade produto antes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const resposta = pm.response.json();\r",
									"pm.collectionVariables.set(\"qtdProduto\", resposta.quantidade);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/produtos/:idProduto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos",
								":idProduto"
							],
							"variable": [
								{
									"key": "idProduto",
									"value": "{{idProduto}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Adicionar um produto ao carrinho",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
									"});\r",
									"\r",
									"const resposta = pm.response.json();\r",
									"pm.collectionVariables.set(\"idCarrinho\", resposta._id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\");\r",
									"const token = pm.collectionVariables.get(\"token\");\r",
									"\r",
									"\r",
									"// Usuario Login\r",
									"let user = {\r",
									"   email: \"mariaflauzino@pucminas.br\",\r",
									"   password: \"pucminas\"\r",
									"};\r",
									"\r",
									"\r",
									"// Login request\r",
									"let loginOptions = {\r",
									"    url: `${baseUrl}/login`,\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify(user)\r",
									"    }\r",
									"};\r",
									"\r",
									"//Excluir carrinho\r",
									"let excluirCarrinhoOptions = {\r",
									"    url: `${baseUrl}/carrinhos/cancelar-compra`,\r",
									"    method: 'DELETE',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"        'Authorization': `${token}`\r",
									"    }\r",
									"};\r",
									"\r",
									"login();\r",
									"\r",
									"function login()\r",
									"{\r",
									"    pm.sendRequest(loginOptions, function (err, res) {\r",
									"        if (err) {\r",
									"            console.error('Erro ao realizar login:', err);\r",
									"            \r",
									"        } else {\r",
									"            console.log('Login com sucesso', res.status, res.json());\r",
									"\r",
									"            let responseData = res.json();\r",
									"            pm.collectionVariables.set(\"token\", responseData.authorization);\r",
									"            setTimeout(function(){}, 2000);\r",
									"            excluirCarrinho();\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"function excluirCarrinho()\r",
									"{\r",
									"    //pm.request.headers.add({ key: 'Authorization', value: `Bearer ${token}` });\r",
									"    pm.sendRequest(excluirCarrinhoOptions, function (err, res) {\r",
									"        if (err) {\r",
									"            console.error('Erro ao excluir carrinho:', err);\r",
									"        } else {\r",
									"            // Log response status and body\r",
									"            console.log('Carrinho excluído com sucesso:', res.status, res.json());\r",
									"            setTimeout(function(){}, 5000);\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 2\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carrinhos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validar Produto foi adicionado ao Carrinho",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\");\r",
									"const token = pm.collectionVariables.get(\"token\");\r",
									"\r",
									"// Usuario Login\r",
									"let user = {\r",
									"   email: \"mariaflauzino@pucminas.br\",\r",
									"   password: \"pucminas\"\r",
									"};\r",
									"\r",
									"// Login request\r",
									"let loginOptions = {\r",
									"    url: `${baseUrl}/login`,\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json',\r",
									"    },\r",
									"    body: {\r",
									"        mode: 'raw',\r",
									"        raw: JSON.stringify(user)\r",
									"    }\r",
									"};\r",
									"\r",
									"login();\r",
									"\r",
									"function login()\r",
									"{\r",
									"    pm.sendRequest(loginOptions, function (err, res) {\r",
									"        if (err) {\r",
									"            console.error('Erro ao realizar login:', err);\r",
									"            \r",
									"        } else {\r",
									"            console.log('Login com sucesso', res.status, res.json());\r",
									"\r",
									"            let responseData = res.json();\r",
									"            pm.collectionVariables.set(\"token\", responseData.authorization);\r",
									"        }\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 201\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validação da estrutura de resposta - Buscar Carrinho por ID - Carrinho encontrado\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var produtos = jsonData.produtos;\r",
									"\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(produtos).to.be.an('array').that.has.lengthOf(1);\r",
									"    pm.expect(jsonData).to.have.property('precoTotal');\r",
									"    pm.expect(jsonData).to.have.property('quantidadeTotal');\r",
									"    pm.expect(jsonData).to.have.property('idUsuario');\r",
									"    pm.expect(jsonData).to.have.property('_id');\r",
									"    produtos.forEach(function (produto){\r",
									"         pm.expect(produto).to.have.property('idProduto');\r",
									"         pm.expect(produto).to.have.property('quantidade');\r",
									"         pm.expect(produto).to.have.property('precoUnitario');\r",
									"    });\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validação resposta carrinho\", function () {\r",
									"    var expectedResponse = {\r",
									"        idProduto: pm.collectionVariables.get(\"idProduto\"),\r",
									"        quantidade: 2,\r",
									"        precoUnitario: 5240\r",
									"    };\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.produtos[0]).to.contains(expectedResponse);\r",
									"});\r",
									"\r",
									"pm.test(\"Validação valor total carrinho\", function () {\r",
									"    var expectedResponse = {\r",
									"        idProduto: pm.collectionVariables.get(\"idProduto\"),\r",
									"        quantidade: 2,\r",
									"        precoUnitario: 5240\r",
									"    };\r",
									"    \r",
									"    var jsonData = pm.response.json();\r",
									"    var produto = jsonData.produtos[0];\r",
									"    pm.expect(jsonData.precoTotal).to.eql(produto.quantidade * produto.precoUnitario);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"produtos\": [\r\n    {\r\n      \"idProduto\": \"{{idProduto}}\",\r\n      \"quantidade\": 8\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carrinhos/:idCarrinho",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								":idCarrinho"
							],
							"variable": [
								{
									"key": "idCarrinho",
									"value": "{{idCarrinho}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancelar compra",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validar mensagem de sucesso\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validação da estrutura de resposta - Registro excluído com sucesso\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carrinhos/cancelar-compra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carrinhos",
								"cancelar-compra"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verificar quantidade produto depois",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifica a quantidade de produtos após finalizar a compra\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.quantidade).to.eql(pm.collectionVariables.get(\"qtdProduto\"));\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/produtos/:idProduto",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"produtos",
								":idProduto"
							],
							"variable": [
								{
									"key": "idProduto",
									"value": "{{idProduto}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Produto encontrado",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos",
										":_id"
									],
									"variable": [
										{
											"key": "_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"nome\": \"<string>\",\n  \"preco\": \"<integer>\",\n  \"descricao\": \"<string>\",\n  \"quantidade\": \"<integer>\",\n  \"_id\": \"<string>\"\n}"
						},
						{
							"name": "Produto não encontrado",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/produtos/:_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"produtos",
										":_id"
									],
									"variable": [
										{
											"key": "_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "idProduto",
			"value": "K6leHdftCeOJj8BJ",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "qtdProduto",
			"value": ""
		},
		{
			"key": "idCarrinho",
			"value": ""
		}
	]
}